env:
  global:
    - LC_CTYPE=en_US.UTF-8
os: osx
language: generic
matrix:
  exclude:
    # Note: Workaround travis-ci/travis-ci#4681
    # Exclude default job which lacks our included environment variables.
    - os: osx
  include:
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env:
        - SWIFT_VERSION="3.0"
      before_install:
        - eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/raw/9f442512a46d7a2af7b850d65a7e9bd31edfb09b/swiftenv-install.sh)"
      script:
        - swift build --verbose
        - swift test || true
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env:
        - SWIFT_VERSION="3.0.1"
      before_install:
        - eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/raw/9f442512a46d7a2af7b850d65a7e9bd31edfb09b/swiftenv-install.sh)"
      script:
        - swift build --verbose
        - swift test || true
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env:
        - SWIFT_VERSION="3.0.2"
      before_install:
        - eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/raw/9f442512a46d7a2af7b850d65a7e9bd31edfb09b/swiftenv-install.sh)"
      script:
        - swift build --verbose
        - swift test || true
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env:
        - SWIFT_VERSION="4.0"
      before_install:
        - eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/raw/9f442512a46d7a2af7b850d65a7e9bd31edfb09b/swiftenv-install.sh)"
      script:
        - swift build --verbose
        - swift test || true
    - osx_image: xcode8
      env:
        - XCODE_SDK=macosx
          XCODE_ACTION=test
          XCODE_DESTINATION="arch=x86_64"
    - osx_image: xcode8.1
      env:
        - XCODE_SDK=macosx
          XCODE_ACTION=test
          XCODE_DESTINATION="arch=x86_64"
    - osx_image: xcode8.2
      env:
        - XCODE_SDK=macosx
          XCODE_ACTION=test
          XCODE_DESTINATION="arch=x86_64"
    - osx_image: xcode8.3
      env:
        - XCODE_SDK=macosx
          XCODE_ACTION=test
          XCODE_DESTINATION="arch=x86_64"
    - osx_image: xcode9.3
      env:
        - XCODE_SDK=macosx
          XCODE_ACTION=test
          XCODE_DESTINATION="arch=x86_64"
    - osx_image: xcode9.3
      env:
        - XCODE_SDK=iphonesimulator
          XCODE_ACTION="build-for-testing test-without-building"
          XCODE_DESTINATION="name=iPhone 6s"
    - osx_image: xcode9.3
      env:
        - XCODE_SDK=appletvsimulator
          XCODE_ACTION="build-for-testing test-without-building"
          XCODE_DESTINATION="name=Apple TV"
    - osx_image: xcode9.3
      env:
        - XCODE_SDK=watchsimulator
          XCODE_ACTION=build
          XCODE_DESTINATION="name=Apple Watch - 38mm"
    - osx_image: xcode9.3
      env:
        - JOB=CARTHAGE
      script:
        - brew update 1> /dev/null 2> /dev/null
        - brew outdated carthage || brew upgrade carthage
        - carthage build --no-skip-current
        - for platform in Mac iOS tvOS watchOS; do test -d Carthage/Build/${platform}/PrettyColors.framework || exit 1; done
    - osx_image: xcode8
      env:
        - JOB=SWIFT_PM
      script:
        - swift build --verbose
        - swift test
    - osx_image: xcode8.1
      env:
        - JOB=SWIFT_PM
      script:
        - swift build --verbose
        - swift test
    - osx_image: xcode8.2
      env:
        - JOB=SWIFT_PM
      script:
        - swift build --verbose
        - swift test
    - osx_image: xcode8.3
      env:
        - JOB=SWIFT_PM
      script:
        - swift build --verbose
        - swift test
    - osx_image: xcode9.3
      env:
        - JOB=SWIFT_PM
      script:
        - swift build --verbose
        - swift test
git:
  submodules: false
before_install:
  - git submodule update --init --recursive
script:
  - xcodebuild ${XCODE_ACTION}
      -project PrettyColors.xcodeproj
      -scheme PrettyColors 
      -sdk ${XCODE_SDK}
      -destination "${XCODE_DESTINATION}"
      CODE_SIGNING_REQUIRED=NO
      CODE_SIGN_IDENTITY=
notifications:
  email: false
